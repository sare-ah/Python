# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# InterpolateEnviroLayers.py
# Created on: 2016-06-01 09:06:10.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: InterpolateEnviroLayers <Environmental_variable> <Water_polygon> 
# Description: Interpolate from environmental points to BoPs in order to get 
#			an area-weighted mean of Thiessen polygons on bottom patches.
# Steps: 
# 1. Add Data: select the *.csv, make XY event layer and project to BC Albers
# 2. Select points that are within a specified distance from BoPs 
# 3. Create Thiessen Polygons
# 4. Clip: retain polygon parts that overlap water
# 5. Multipart to Singlepart
# 6. Make feature layer
# 7. Select by Location: retain polygons that intersect with points
 
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy			# import the ESRI arcpy module
from arcpy import env	# import env from arcpy
from arcpy.sa import *	# import Spatial Analyst
import os				# import Python os module

# Check out the ArcGIS Spatial Analyst extension license
arcpy.CheckOutExtension("Spatial")
# Create envrionmental variables
arcpy.env.overwriteOutput = True

# Read the parameter values:
# 1. environmental variable 
# 2. polygon features
# 3. output workspace

# Enter user defined variables path in modelbuilder dialog
ev = arcpy.GetParameterAsText(0)
fc1 = arcpy.GetParameterAsText(1)
fc2 = arcpy.GetParameterAsText(2)
dist = arcpy.GetParameterAsText(3)
# linearUnit = dist + " Meters"

# Get workspace from user input
arcpy.env.workspace = arcpy.GetParameterAsText(4)

# Get Environmental variable name from csv file name
desc = arcpy.Describe(ev)
evname = desc.baseName

# Print to screen which environmental variable is being interpolated
arcpy.AddMessage(evname+" method 2")

# Local variables:
v_Name_Layer = evname+"_Layer"
v_Name_fc = evname+"_fc"
v_Name_fLayer = evname+"_fLayer"
v_Name_byDistance = evname+"_byDistance"
v_Name_Thiessen = evname+"_Thiessen"
v_Name_Clip = evname+"_Clip"
v_Name_Single = evname+"_Thies_singlePart"
v_Name_fLayer2 = evname+"_fLayer2"
v_Name_Single_fLyr = evname+"_singleFlyr"
v_Name_Select = evname+"_Select"

arcpy.AddMessage("Select features "+fc1)
arcpy.AddMessage("Clip features "+fc2)

# Process: Make XY Event Layer
arcpy.AddMessage("Creating environmental variable event layer...(1 of 5)")
arcpy.MakeXYEventLayer_management(ev, "longitude", "latitude", v_Name_Layer, "PROJCS['NAD_1983_BC_Environment_Albers',GEOGCS['GCS_North_American_1983',DATUM['D_North_American_1983',SPHEROID['GRS_1980',6378137.0,298.257222101]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]],PROJECTION['Albers'],PARAMETER['False_Easting',1000000.0],PARAMETER['False_Northing',0.0],PARAMETER['Central_Meridian',-126.0],PARAMETER['Standard_Parallel_1',50.0],PARAMETER['Standard_Parallel_2',58.5],PARAMETER['Latitude_Of_Origin',45.0],UNIT['Meter',1.0]];-13239300 -8610100 10000;-100000 10000;-100000 10000;0.001;0.001;0.001;IsHighPrecision", "")

# Process: Copy Features
arcpy.CopyFeatures_management(v_Name_Layer, v_Name_fc, "", "0", "0", "0")

# Process: Make Feature Layer
arcpy.MakeFeatureLayer_management(v_Name_fc, v_Name_fLayer)

# Process: Select Layer By Location
arcpy.SelectLayerByLocation_management(v_Name_fLayer, "WITHIN_A_DISTANCE", fc1, dist, "NEW_SELECTION")

# Process: Copy Features
arcpy.CopyFeatures_management(v_Name_fLayer, v_Name_byDistance, "", "0", "0", "0")

# Process: Create Thiessen Polygons
arcpy.AddMessage("Creating Thiessen polygons... (2 of 5)")
arcpy.CreateThiessenPolygons_analysis(v_Name_byDistance, v_Name_Thiessen, "ALL")

# Process: Clip 
arcpy.AddMessage("Clipping Thiessen polygons with water...(3 of 5)")
arcpy.Clip_analysis(v_Name_Thiessen, fc2, v_Name_Clip, "")

# Process: Multipart To Singlepart
arcpy.AddMessage("Creating singlepart... (4 of 5)")
arcpy.MultipartToSinglepart_management(v_Name_Clip, v_Name_Single)

# Process: Make Feature Layer
arcpy.MakeFeatureLayer_management(v_Name_fc, v_Name_fLayer2)
arcpy.MakeFeatureLayer_management(v_Name_Single, v_Name_Single_fLyr)

# Process: Select Layer By Location
arcpy.AddMessage("Select Thiessen polygons with points... (5 of 5)")
arcpy.SelectLayerByLocation_management(v_Name_Single_fLyr, "INTERSECT", v_Name_fLayer2, "", "NEW_SELECTION")

# Process: Copy Features
arcpy.CopyFeatures_management(v_Name_Single_fLyr, v_Name_Select, "", "0", "0", "0")
